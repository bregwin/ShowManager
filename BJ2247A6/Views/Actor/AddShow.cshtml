@model BJ2247A5.Models.ShowAddFormViewModel

@{
    ViewBag.Title = "AddShow";
}

<h2>Add Show for @Model.ActorName</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row mb-3">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-sm-2 text-end" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "col-form-label col-sm-2 text-end" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "col-form-label col-sm-2 text-end" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.GenreList, htmlAttributes: new { @class = "control-label col-sm-2 text-end" })
        <div class="col-md-10">
            @Html.DropDownList("Genre", Model.GenreList, htmlAttributes: new { @class = "form-select" })
            @Html.ValidationMessageFor(model => model.GenreList, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(m => m.ActorList, new { @class = "col-form-label col-sm-2 text-end" })
        <div class="col-md-10 card">
            @foreach (var actor in Model.ActorList)
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="SelectedActorIds" value="@actor.Value" checked="@actor.Selected" />
                    <label class="form-check-label">@actor.Text</label>
                </div>

            }
        </div>
    </div>

    <div class="form-group row mb-3">
        @Html.LabelFor(model => model.Premise, htmlAttributes: new { @class = "control-label col-sm-2 text-end" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Premise, new { htmlAttributes = new { @class = "form-control", @rows = 7 } })
            @Html.ValidationMessageFor(model => model.Premise, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        <div class="col">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.ckeditor.com/4.16.2/standard/ckeditor.js"></script>
    <script>CKEDITOR.replace('Premise', { versionCheck: false });</script>
}
